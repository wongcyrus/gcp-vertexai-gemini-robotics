# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
  # Build the frontend Docker image
  - name: "gcr.io/cloud-builders/docker"
    id: build-frontend-image
    dir: "robot-adk-agent/frontend"
    args:
      - "build"
      - "-t"
      - "$_REGION-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REGISTRY_REPO_NAME/frontend-webapp:$COMMIT_SHA"
      - "-t"
      - "$_REGION-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REGISTRY_REPO_NAME/frontend-webapp:staging-latest"
      - "."

  # Push the frontend Docker image to Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    id: push-frontend-image
    args:
      - "push"
      - "--all-tags"
      - "$_REGION-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REGISTRY_REPO_NAME/frontend-webapp"
    waitFor:
      - build-frontend-image

  # Deploy to Cloud Run (staging)
  - name: "gcr.io/cloud-builders/gcloud"
    id: deploy-frontend-to-staging
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "robot-adk-frontend-staging"
      - "--image"
      - "$_REGION-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REGISTRY_REPO_NAME/frontend-webapp:$COMMIT_SHA"
      - "--region"
      - "$_REGION"
      - "--project"
      - "$_STAGING_PROJECT_ID"
      - "--platform"
      - "managed"
      - "--allow-unauthenticated"
      - "--port"
      - "80"
      - "--min-instances"
      - "0"
      - "--max-instances"
      - "5"
      - "--cpu"
      - "1"
      - "--memory"
      - "512Mi"
      - "--concurrency"
      - "80"
      - "--labels"
      - "created-by=adk,component=frontend,environment=staging"
      - "--set-env-vars"
      - "COMMIT_SHA=${COMMIT_SHA},ENVIRONMENT=staging"
    waitFor:
      - push-frontend-image

substitutions:
  _STAGING_PROJECT_ID: YOUR_STAGING_PROJECT_ID
  _REGION: us-central1
  _ARTIFACT_REGISTRY_REPO_NAME: robot-adk-agent

logsBucket: gs://${PROJECT_ID}-robot-adk-agent-logs-data/build-logs
options:
  substitutionOption: ALLOW_LOOSE
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET
  machineType: E2_MEDIUM
